<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<batch:job id="importOrganizationData">
		<batch:step id="readWriteOrganizationData">
			<batch:partition step="partitionReadWriteOrganizationData"
				partitioner="partitioner">
				<batch:handler grid-size="2" task-executor="taskExecutor" />
			</batch:partition>
		</batch:step>
	</batch:job>

	<bean id="partitioner"
		class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
		<property name="keyName" value="fileName" />
		<property name="resources"
			value="file:/home/punnoose/dev/workspace/spring-batch/MultiResourcePartitionerDemo/src/main/webapp/WEB-INF/data/input/*.txt" />
	</bean>

	<batch:step id="partitionReadWriteOrganizationData">
		<batch:tasklet>
			<batch:chunk reader="itemReader" writer="itemWriter"
				commit-interval="100" />
		</batch:tasklet>
	</batch:step>

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="5" />
	</bean>

	<bean id="itemReader" scope="step"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="linesToSkip" value="1" />
		<property name="resource" value="#{stepExecutionContext[fileName]}" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="COMPANY_ID,COMPANY_NAME,SALES" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.punnoose.springbatch.mutiresourcepartitioner.batch.OrganizationDataFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="itemWriter"
		class="org.punnoose.springbatch.mutiresourcepartitioner.batch.OrganizationDataWriter" />

</beans>